name: 🔁 Build & Release Aztec Rain

on:
  push:
    paths:
      - 'gradle.properties'
      - 'build.gradle.kts'
      - '.github/workflows/release.yml'
      - 'src/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    outputs:
      new_version: ${{ steps.extract.outputs.version }}
      should_release: ${{ steps.check.outputs.should_release }}

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Extract mod version
        id: extract
        run: |
          version=$(grep '^mod_version=' gradle.properties | cut -d= -f2 | tr -d '\r')
          echo "version=$version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: 📦 Check if version was already released
        id: check
        run: |
          tag="v${{ steps.extract.outputs.version }}"
          tag_exists=$(git ls-remote --tags origin "$tag" | wc -l)
          should_release=$([ "$tag_exists" = "0" ] && echo true || echo false)
          echo "should_release=$should_release"
          echo "should_release=$should_release" >> $GITHUB_OUTPUT

      - name: 🧪 Set up JDK 21
        if: steps.check.outputs.should_release == 'true'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: 🛠️ Grant execute permission for Gradle
        if: steps.check.outputs.should_release == 'true'
        run: chmod +x ./gradlew

      - name: 🧪 Verify JAR presence before build
        if: steps.check.outputs.should_release == 'true'
        run: ls -l ./build/libs || echo "ℹ️ No JARs yet — will be created now"

      - name: 🏗️ Build mod
        if: steps.check.outputs.should_release == 'true'
        run: ./gradlew build --warning-mode all

      - name: 🚀 Create GitHub Release
        if: steps.check.outputs.should_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.extract.outputs.version }}
          name: Aztec Rain v${{ steps.extract.outputs.version }}
          files: build/libs/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📄 Upload problems report (if exists)
        if: steps.check.outputs.should_release == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: gradle-problems-report
          path: build/reports/problems/problems-report.html
          if-no-files-found: ignore
